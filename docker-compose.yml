services:
  app:
    build:
      context: . 
    container_name: golang_crud_app
    ports:
      - "8080:8080"
    env_file: 
      - .env.production
    depends_on:
      - postgres 
    environment:
      APP_ENV: "production" # Explicitly set environment

  postgres:
    image: postgres:15
    container_name: postgres_db
    ports:
      - "${DATABASE_PORT}:5432"
    env_file: 
      - .env.production
    environment:
      POSTGRES_USER: ${DATABASE_USER} 
      POSTGRES_PASSWORD: ${DATABASE_PASS}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    healthcheck: # Add healthcheck to confirm Postgres is ready
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
